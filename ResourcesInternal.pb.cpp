// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frameworks/base/tools/aapt2/ResourcesInternal.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "frameworks/base/tools/aapt2/ResourcesInternal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace aapt {
namespace pb {
namespace internal {

void protobuf_ShutdownFile_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto() {
  delete CompiledFile::default_instance_;
  delete CompiledFile_Symbol::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::aapt::pb::protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResources_2eproto();
  CompiledFile::default_instance_ = new CompiledFile();
  CompiledFile_Symbol::default_instance_ = new CompiledFile_Symbol();
  CompiledFile::default_instance_->InitAsDefaultInstance();
  CompiledFile_Symbol::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_once_);
void protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_once_,
                 &protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto {
  StaticDescriptorInitializer_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto() {
    protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto();
  }
} static_descriptor_initializer_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForCompiledFile(
    CompiledFile* ptr) {
  return ptr->mutable_unknown_fields();
}

static ::std::string* MutableUnknownFieldsForCompiledFile_Symbol(
    CompiledFile_Symbol* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompiledFile_Symbol::kResourceNameFieldNumber;
const int CompiledFile_Symbol::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompiledFile_Symbol::CompiledFile_Symbol()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aapt.pb.internal.CompiledFile.Symbol)
}

void CompiledFile_Symbol::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  source_ = const_cast< ::aapt::pb::SourcePosition*>(
      ::aapt::pb::SourcePosition::internal_default_instance());
#else
  source_ = const_cast< ::aapt::pb::SourcePosition*>(&::aapt::pb::SourcePosition::default_instance());
#endif
}

CompiledFile_Symbol::CompiledFile_Symbol(const CompiledFile_Symbol& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aapt.pb.internal.CompiledFile.Symbol)
}

void CompiledFile_Symbol::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CompiledFile_Symbol::~CompiledFile_Symbol() {
  // @@protoc_insertion_point(destructor:aapt.pb.internal.CompiledFile.Symbol)
  SharedDtor();
}

void CompiledFile_Symbol::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete source_;
  }
}

void CompiledFile_Symbol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CompiledFile_Symbol& CompiledFile_Symbol::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto();
#endif
  return *default_instance_;
}

CompiledFile_Symbol* CompiledFile_Symbol::default_instance_ = NULL;

CompiledFile_Symbol* CompiledFile_Symbol::New(::google::protobuf::Arena* arena) const {
  CompiledFile_Symbol* n = new CompiledFile_Symbol;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompiledFile_Symbol::Clear() {
// @@protoc_insertion_point(message_clear_start:aapt.pb.internal.CompiledFile.Symbol)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_resource_name()) {
      resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_source()) {
      if (source_ != NULL) source_->::aapt::pb::SourcePosition::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CompiledFile_Symbol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForCompiledFile_Symbol, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aapt.pb.internal.CompiledFile.Symbol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string resource_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_source;
        break;
      }

      // optional .aapt.pb.SourcePosition source = 2;
      case 2: {
        if (tag == 18) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aapt.pb.internal.CompiledFile.Symbol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aapt.pb.internal.CompiledFile.Symbol)
  return false;
#undef DO_
}

void CompiledFile_Symbol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aapt.pb.internal.CompiledFile.Symbol)
  // optional string resource_name = 1;
  if (has_resource_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // optional .aapt.pb.SourcePosition source = 2;
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->source_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aapt.pb.internal.CompiledFile.Symbol)
}

int CompiledFile_Symbol::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aapt.pb.internal.CompiledFile.Symbol)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string resource_name = 1;
    if (has_resource_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resource_name());
    }

    // optional .aapt.pb.SourcePosition source = 2;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->source_);
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompiledFile_Symbol::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CompiledFile_Symbol*>(&from));
}

void CompiledFile_Symbol::MergeFrom(const CompiledFile_Symbol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aapt.pb.internal.CompiledFile.Symbol)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resource_name()) {
      set_has_resource_name();
      resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
    }
    if (from.has_source()) {
      mutable_source()->::aapt::pb::SourcePosition::MergeFrom(from.source());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void CompiledFile_Symbol::CopyFrom(const CompiledFile_Symbol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aapt.pb.internal.CompiledFile.Symbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompiledFile_Symbol::IsInitialized() const {

  return true;
}

void CompiledFile_Symbol::Swap(CompiledFile_Symbol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompiledFile_Symbol::InternalSwap(CompiledFile_Symbol* other) {
  resource_name_.Swap(&other->resource_name_);
  std::swap(source_, other->source_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CompiledFile_Symbol::GetTypeName() const {
  return "aapt.pb.internal.CompiledFile.Symbol";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompiledFile::kResourceNameFieldNumber;
const int CompiledFile::kConfigFieldNumber;
const int CompiledFile::kSourcePathFieldNumber;
const int CompiledFile::kExportedSymbolFieldNumber;
const int CompiledFile::kXmlRootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompiledFile::CompiledFile()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aapt.pb.internal.CompiledFile)
}

void CompiledFile::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  config_ = const_cast< ::aapt::pb::ConfigDescription*>(
      ::aapt::pb::ConfigDescription::internal_default_instance());
#else
  config_ = const_cast< ::aapt::pb::ConfigDescription*>(&::aapt::pb::ConfigDescription::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  xml_root_ = const_cast< ::aapt::pb::XmlNode*>(
      ::aapt::pb::XmlNode::internal_default_instance());
#else
  xml_root_ = const_cast< ::aapt::pb::XmlNode*>(&::aapt::pb::XmlNode::default_instance());
#endif
}

CompiledFile::CompiledFile(const CompiledFile& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aapt.pb.internal.CompiledFile)
}

void CompiledFile::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_ = NULL;
  source_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xml_root_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CompiledFile::~CompiledFile() {
  // @@protoc_insertion_point(destructor:aapt.pb.internal.CompiledFile)
  SharedDtor();
}

void CompiledFile::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete config_;
    delete xml_root_;
  }
}

void CompiledFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CompiledFile& CompiledFile::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_frameworks_2fbase_2ftools_2faapt2_2fResourcesInternal_2eproto();
#endif
  return *default_instance_;
}

CompiledFile* CompiledFile::default_instance_ = NULL;

CompiledFile* CompiledFile::New(::google::protobuf::Arena* arena) const {
  CompiledFile* n = new CompiledFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompiledFile::Clear() {
// @@protoc_insertion_point(message_clear_start:aapt.pb.internal.CompiledFile)
  if (_has_bits_[0 / 32] & 23u) {
    if (has_resource_name()) {
      resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_config()) {
      if (config_ != NULL) config_->::aapt::pb::ConfigDescription::Clear();
    }
    if (has_source_path()) {
      source_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_xml_root()) {
      if (xml_root_ != NULL) xml_root_->::aapt::pb::XmlNode::Clear();
    }
  }
  exported_symbol_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CompiledFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForCompiledFile, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aapt.pb.internal.CompiledFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string resource_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_config;
        break;
      }

      // optional .aapt.pb.ConfigDescription config = 2;
      case 2: {
        if (tag == 18) {
         parse_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_source_path;
        break;
      }

      // optional string source_path = 3;
      case 3: {
        if (tag == 26) {
         parse_source_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_path()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_exported_symbol;
        break;
      }

      // repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 4;
      case 4: {
        if (tag == 34) {
         parse_exported_symbol:
          DO_(input->IncrementRecursionDepth());
         parse_loop_exported_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_exported_symbol()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_exported_symbol;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_xml_root;
        break;
      }

      // optional .aapt.pb.XmlNode xml_root = 5;
      case 5: {
        if (tag == 42) {
         parse_xml_root:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xml_root()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aapt.pb.internal.CompiledFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aapt.pb.internal.CompiledFile)
  return false;
#undef DO_
}

void CompiledFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aapt.pb.internal.CompiledFile)
  // optional string resource_name = 1;
  if (has_resource_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_name(), output);
  }

  // optional .aapt.pb.ConfigDescription config = 2;
  if (has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->config_, output);
  }

  // optional string source_path = 3;
  if (has_source_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source_path(), output);
  }

  // repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 4;
  for (unsigned int i = 0, n = this->exported_symbol_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->exported_symbol(i), output);
  }

  // optional .aapt.pb.XmlNode xml_root = 5;
  if (has_xml_root()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->xml_root_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aapt.pb.internal.CompiledFile)
}

int CompiledFile::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aapt.pb.internal.CompiledFile)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 23u) {
    // optional string resource_name = 1;
    if (has_resource_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resource_name());
    }

    // optional .aapt.pb.ConfigDescription config = 2;
    if (has_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->config_);
    }

    // optional string source_path = 3;
    if (has_source_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_path());
    }

    // optional .aapt.pb.XmlNode xml_root = 5;
    if (has_xml_root()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->xml_root_);
    }

  }
  // repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 4;
  total_size += 1 * this->exported_symbol_size();
  for (int i = 0; i < this->exported_symbol_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->exported_symbol(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompiledFile::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CompiledFile*>(&from));
}

void CompiledFile::MergeFrom(const CompiledFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aapt.pb.internal.CompiledFile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  exported_symbol_.MergeFrom(from.exported_symbol_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resource_name()) {
      set_has_resource_name();
      resource_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_name_);
    }
    if (from.has_config()) {
      mutable_config()->::aapt::pb::ConfigDescription::MergeFrom(from.config());
    }
    if (from.has_source_path()) {
      set_has_source_path();
      source_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_path_);
    }
    if (from.has_xml_root()) {
      mutable_xml_root()->::aapt::pb::XmlNode::MergeFrom(from.xml_root());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void CompiledFile::CopyFrom(const CompiledFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aapt.pb.internal.CompiledFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompiledFile::IsInitialized() const {

  return true;
}

void CompiledFile::Swap(CompiledFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompiledFile::InternalSwap(CompiledFile* other) {
  resource_name_.Swap(&other->resource_name_);
  std::swap(config_, other->config_);
  source_path_.Swap(&other->source_path_);
  exported_symbol_.UnsafeArenaSwap(&other->exported_symbol_);
  std::swap(xml_root_, other->xml_root_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CompiledFile::GetTypeName() const {
  return "aapt.pb.internal.CompiledFile";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompiledFile_Symbol

// optional string resource_name = 1;
bool CompiledFile_Symbol::has_resource_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CompiledFile_Symbol::set_has_resource_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CompiledFile_Symbol::clear_has_resource_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CompiledFile_Symbol::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_resource_name();
}
 const ::std::string& CompiledFile_Symbol::resource_name() const {
  // @@protoc_insertion_point(field_get:aapt.pb.internal.CompiledFile.Symbol.resource_name)
  return resource_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompiledFile_Symbol::set_resource_name(const ::std::string& value) {
  set_has_resource_name();
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aapt.pb.internal.CompiledFile.Symbol.resource_name)
}
 void CompiledFile_Symbol::set_resource_name(const char* value) {
  set_has_resource_name();
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aapt.pb.internal.CompiledFile.Symbol.resource_name)
}
 void CompiledFile_Symbol::set_resource_name(const char* value, size_t size) {
  set_has_resource_name();
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aapt.pb.internal.CompiledFile.Symbol.resource_name)
}
 ::std::string* CompiledFile_Symbol::mutable_resource_name() {
  set_has_resource_name();
  // @@protoc_insertion_point(field_mutable:aapt.pb.internal.CompiledFile.Symbol.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CompiledFile_Symbol::release_resource_name() {
  // @@protoc_insertion_point(field_release:aapt.pb.internal.CompiledFile.Symbol.resource_name)
  clear_has_resource_name();
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompiledFile_Symbol::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    set_has_resource_name();
  } else {
    clear_has_resource_name();
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:aapt.pb.internal.CompiledFile.Symbol.resource_name)
}

// optional .aapt.pb.SourcePosition source = 2;
bool CompiledFile_Symbol::has_source() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CompiledFile_Symbol::set_has_source() {
  _has_bits_[0] |= 0x00000002u;
}
void CompiledFile_Symbol::clear_has_source() {
  _has_bits_[0] &= ~0x00000002u;
}
void CompiledFile_Symbol::clear_source() {
  if (source_ != NULL) source_->::aapt::pb::SourcePosition::Clear();
  clear_has_source();
}
const ::aapt::pb::SourcePosition& CompiledFile_Symbol::source() const {
  // @@protoc_insertion_point(field_get:aapt.pb.internal.CompiledFile.Symbol.source)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return source_ != NULL ? *source_ : *default_instance().source_;
#else
  return source_ != NULL ? *source_ : *default_instance_->source_;
#endif
}
::aapt::pb::SourcePosition* CompiledFile_Symbol::mutable_source() {
  set_has_source();
  if (source_ == NULL) {
    source_ = new ::aapt::pb::SourcePosition;
  }
  // @@protoc_insertion_point(field_mutable:aapt.pb.internal.CompiledFile.Symbol.source)
  return source_;
}
::aapt::pb::SourcePosition* CompiledFile_Symbol::release_source() {
  // @@protoc_insertion_point(field_release:aapt.pb.internal.CompiledFile.Symbol.source)
  clear_has_source();
  ::aapt::pb::SourcePosition* temp = source_;
  source_ = NULL;
  return temp;
}
void CompiledFile_Symbol::set_allocated_source(::aapt::pb::SourcePosition* source) {
  delete source_;
  source_ = source;
  if (source) {
    set_has_source();
  } else {
    clear_has_source();
  }
  // @@protoc_insertion_point(field_set_allocated:aapt.pb.internal.CompiledFile.Symbol.source)
}

// -------------------------------------------------------------------

// CompiledFile

// optional string resource_name = 1;
bool CompiledFile::has_resource_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CompiledFile::set_has_resource_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CompiledFile::clear_has_resource_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CompiledFile::clear_resource_name() {
  resource_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_resource_name();
}
 const ::std::string& CompiledFile::resource_name() const {
  // @@protoc_insertion_point(field_get:aapt.pb.internal.CompiledFile.resource_name)
  return resource_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompiledFile::set_resource_name(const ::std::string& value) {
  set_has_resource_name();
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aapt.pb.internal.CompiledFile.resource_name)
}
 void CompiledFile::set_resource_name(const char* value) {
  set_has_resource_name();
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aapt.pb.internal.CompiledFile.resource_name)
}
 void CompiledFile::set_resource_name(const char* value, size_t size) {
  set_has_resource_name();
  resource_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aapt.pb.internal.CompiledFile.resource_name)
}
 ::std::string* CompiledFile::mutable_resource_name() {
  set_has_resource_name();
  // @@protoc_insertion_point(field_mutable:aapt.pb.internal.CompiledFile.resource_name)
  return resource_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CompiledFile::release_resource_name() {
  // @@protoc_insertion_point(field_release:aapt.pb.internal.CompiledFile.resource_name)
  clear_has_resource_name();
  return resource_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompiledFile::set_allocated_resource_name(::std::string* resource_name) {
  if (resource_name != NULL) {
    set_has_resource_name();
  } else {
    clear_has_resource_name();
  }
  resource_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_name);
  // @@protoc_insertion_point(field_set_allocated:aapt.pb.internal.CompiledFile.resource_name)
}

// optional .aapt.pb.ConfigDescription config = 2;
bool CompiledFile::has_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CompiledFile::set_has_config() {
  _has_bits_[0] |= 0x00000002u;
}
void CompiledFile::clear_has_config() {
  _has_bits_[0] &= ~0x00000002u;
}
void CompiledFile::clear_config() {
  if (config_ != NULL) config_->::aapt::pb::ConfigDescription::Clear();
  clear_has_config();
}
const ::aapt::pb::ConfigDescription& CompiledFile::config() const {
  // @@protoc_insertion_point(field_get:aapt.pb.internal.CompiledFile.config)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return config_ != NULL ? *config_ : *default_instance().config_;
#else
  return config_ != NULL ? *config_ : *default_instance_->config_;
#endif
}
::aapt::pb::ConfigDescription* CompiledFile::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    config_ = new ::aapt::pb::ConfigDescription;
  }
  // @@protoc_insertion_point(field_mutable:aapt.pb.internal.CompiledFile.config)
  return config_;
}
::aapt::pb::ConfigDescription* CompiledFile::release_config() {
  // @@protoc_insertion_point(field_release:aapt.pb.internal.CompiledFile.config)
  clear_has_config();
  ::aapt::pb::ConfigDescription* temp = config_;
  config_ = NULL;
  return temp;
}
void CompiledFile::set_allocated_config(::aapt::pb::ConfigDescription* config) {
  delete config_;
  config_ = config;
  if (config) {
    set_has_config();
  } else {
    clear_has_config();
  }
  // @@protoc_insertion_point(field_set_allocated:aapt.pb.internal.CompiledFile.config)
}

// optional string source_path = 3;
bool CompiledFile::has_source_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CompiledFile::set_has_source_path() {
  _has_bits_[0] |= 0x00000004u;
}
void CompiledFile::clear_has_source_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void CompiledFile::clear_source_path() {
  source_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source_path();
}
 const ::std::string& CompiledFile::source_path() const {
  // @@protoc_insertion_point(field_get:aapt.pb.internal.CompiledFile.source_path)
  return source_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompiledFile::set_source_path(const ::std::string& value) {
  set_has_source_path();
  source_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aapt.pb.internal.CompiledFile.source_path)
}
 void CompiledFile::set_source_path(const char* value) {
  set_has_source_path();
  source_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aapt.pb.internal.CompiledFile.source_path)
}
 void CompiledFile::set_source_path(const char* value, size_t size) {
  set_has_source_path();
  source_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aapt.pb.internal.CompiledFile.source_path)
}
 ::std::string* CompiledFile::mutable_source_path() {
  set_has_source_path();
  // @@protoc_insertion_point(field_mutable:aapt.pb.internal.CompiledFile.source_path)
  return source_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CompiledFile::release_source_path() {
  // @@protoc_insertion_point(field_release:aapt.pb.internal.CompiledFile.source_path)
  clear_has_source_path();
  return source_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CompiledFile::set_allocated_source_path(::std::string* source_path) {
  if (source_path != NULL) {
    set_has_source_path();
  } else {
    clear_has_source_path();
  }
  source_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_path);
  // @@protoc_insertion_point(field_set_allocated:aapt.pb.internal.CompiledFile.source_path)
}

// repeated .aapt.pb.internal.CompiledFile.Symbol exported_symbol = 4;
int CompiledFile::exported_symbol_size() const {
  return exported_symbol_.size();
}
void CompiledFile::clear_exported_symbol() {
  exported_symbol_.Clear();
}
const ::aapt::pb::internal::CompiledFile_Symbol& CompiledFile::exported_symbol(int index) const {
  // @@protoc_insertion_point(field_get:aapt.pb.internal.CompiledFile.exported_symbol)
  return exported_symbol_.Get(index);
}
::aapt::pb::internal::CompiledFile_Symbol* CompiledFile::mutable_exported_symbol(int index) {
  // @@protoc_insertion_point(field_mutable:aapt.pb.internal.CompiledFile.exported_symbol)
  return exported_symbol_.Mutable(index);
}
::aapt::pb::internal::CompiledFile_Symbol* CompiledFile::add_exported_symbol() {
  // @@protoc_insertion_point(field_add:aapt.pb.internal.CompiledFile.exported_symbol)
  return exported_symbol_.Add();
}
::google::protobuf::RepeatedPtrField< ::aapt::pb::internal::CompiledFile_Symbol >*
CompiledFile::mutable_exported_symbol() {
  // @@protoc_insertion_point(field_mutable_list:aapt.pb.internal.CompiledFile.exported_symbol)
  return &exported_symbol_;
}
const ::google::protobuf::RepeatedPtrField< ::aapt::pb::internal::CompiledFile_Symbol >&
CompiledFile::exported_symbol() const {
  // @@protoc_insertion_point(field_list:aapt.pb.internal.CompiledFile.exported_symbol)
  return exported_symbol_;
}

// optional .aapt.pb.XmlNode xml_root = 5;
bool CompiledFile::has_xml_root() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CompiledFile::set_has_xml_root() {
  _has_bits_[0] |= 0x00000010u;
}
void CompiledFile::clear_has_xml_root() {
  _has_bits_[0] &= ~0x00000010u;
}
void CompiledFile::clear_xml_root() {
  if (xml_root_ != NULL) xml_root_->::aapt::pb::XmlNode::Clear();
  clear_has_xml_root();
}
const ::aapt::pb::XmlNode& CompiledFile::xml_root() const {
  // @@protoc_insertion_point(field_get:aapt.pb.internal.CompiledFile.xml_root)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return xml_root_ != NULL ? *xml_root_ : *default_instance().xml_root_;
#else
  return xml_root_ != NULL ? *xml_root_ : *default_instance_->xml_root_;
#endif
}
::aapt::pb::XmlNode* CompiledFile::mutable_xml_root() {
  set_has_xml_root();
  if (xml_root_ == NULL) {
    xml_root_ = new ::aapt::pb::XmlNode;
  }
  // @@protoc_insertion_point(field_mutable:aapt.pb.internal.CompiledFile.xml_root)
  return xml_root_;
}
::aapt::pb::XmlNode* CompiledFile::release_xml_root() {
  // @@protoc_insertion_point(field_release:aapt.pb.internal.CompiledFile.xml_root)
  clear_has_xml_root();
  ::aapt::pb::XmlNode* temp = xml_root_;
  xml_root_ = NULL;
  return temp;
}
void CompiledFile::set_allocated_xml_root(::aapt::pb::XmlNode* xml_root) {
  delete xml_root_;
  xml_root_ = xml_root;
  if (xml_root) {
    set_has_xml_root();
  } else {
    clear_has_xml_root();
  }
  // @@protoc_insertion_point(field_set_allocated:aapt.pb.internal.CompiledFile.xml_root)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace internal
}  // namespace pb
}  // namespace aapt

// @@protoc_insertion_point(global_scope)
